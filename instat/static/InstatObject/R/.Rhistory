hsb2 <- read.csv("http://www.ats.ucla.edu/stat/data/hsb2.csv")
hsb2
?contrasts
ggplot(data=Test1_temp, mapping=aes(y=A, x=B, colour=A, fill=A, stroke=X1)) + geom_point()
plot <- read.csv("~/plot.csv", stringsAsFactors=FALSE)
View(plot)
summary(plot)
ggplot(data=plot, mapping=aes(y=A, x=B, colour=A, fill=A, stroke=X1)) + geom_point()
library("ggplot2", lib.loc="~/R/R-3.3.1/library")
ggplot(data=plot, mapping=aes(y=A, x=B, colour=A, fill=A, stroke=X1)) + geom_point()
plot <- read.csv("~/plot.csv", header=FALSE)
View(plot)
plot <- read.csv("~/plot.csv")
View(plot)
summary(plot)
ggplot(data=plot, mapping=aes(y=A, x=B, colour=A, fill=A, stroke=X1)) + geom_point()
ggplot(data=plot, mapping=aes(y=A, x=B, colour=A, fill=A, stroke=A)) + geom_point()
?bind_rows
library("dplyr", lib.loc="~/R/R-3.3.1/library")
?bind_rows
hsb2 <- read.csv("http://www.ats.ucla.edu/stat/data/hsb2.csv")
hsb2
package(visreg)
library(visreg)
install.packages("visreg")
library(visreg)
hsb2 <- read.csv("http://www.ats.ucla.edu/stat/data/airquality.csv")
fit <- lm(Ozone ~ Solar.R + Wind + Temp, data=airquality)
fit
visreg(fit)
visreg(fit, "Wind")
visreg(fit, "Wind", type="contrast")
visreg(fit, "Wind", type="conditional")
visreg(fit, "Wind", type="contrast")
visreg(fit, "Wind", type="conditional")
visreg(fit, "Wind")
?visreg
visreg(fit, "Wind", "effect")
airquality$Heat <- cut(airquality$Temp, 3, labels = c("Cool", "Mild", "Hot"))
fit.heat <- lm(Ozone ~ Solar.R + Wind + Heat, data=airquality)
visreg(fit.heat, "Heat", type="Contrast")
visreg(fit.heat, "Heat", type="contrast")
visreg(fit.heat, "Heat", type="conditional")
?visreg
airquality$Heat <- cut(airquality$Temp, 10, labels = c("Cool", "Mild", "Hot"))
visreg(fit.heat, "Heat", type="conditional")
visreg(fit.heat, "Heat", type="contrast")
?visreg
fit1 <- lm(Ozone ~ Solar.R + Wind + I(Wind^2) + Temp, data=airquality)
fit1
visreg(fit1)
fit2 <- lm(log(Ozone) ~ Solar.R + Wind + Temp, data=airquality)
visreg(fit1)
visreg(fit1)
visreg(fit2)
fit1 <- lm(log(Ozone) ~ Solar.R + Wind + I(Wind^2) + Temp, data=airquality)
visreg(fit1)
visreg(fit1, "Wind", partial=TRUE)
visreg(fit1, "Wind", trans=exp, partial=TRUE)
visreg(fit1)
visreg(fit, "Wind")
visreg(fit, "Wind", cond=list(Temp=50))
visreg(fit, "Wind", cond=list(Temp=100))
fit <- lm(Ozone ~ Solar.R + Wind * Heat, data=airquality)
visreg(fit, "Wind", by="Heat")
library(ggplot2)
visreg(fit, "Wind", by="Heat", gg=TRUE)
visreg(fit, "Wind", by="Heat", overlay=TRUE)
visreg(fit, "Wind", by="Heat", overlay=TRUE, partial=FALSE)
visreg(fit, "Wind", by="Heat", overlay=FALSE, partial=FALSE)
visreg(fit, "Wind", by="Heat", overlay=TRUE, partial=FALSE)
visreg(fit, "Heat", by="Wind", overlay=TRUE, partial=FALSE)
library(splines)
fit
library(splines)
fit <- lm(Ozone ~ Solar.R + ns(Wind, df=2)*ns(Temp, df=2), data=airquality)
fit
visreg(fit)
visreg2d(fit)
visreg2d(fit, "Wind", "Temp", plot.type="image")
visreg2d(fit, "Wind", "Temp", plot.type="persp")
library(Rgl)
library(rgl)
install.packages("rgl")
library(rgl)
visreg2d(fit, x="Wind", y="Temp", plot.type="rgl")
fit <- lm(Ozone ~ Solar.R * Wind * Temp, data=airquality)
visreg2d(fit, "Wind", "Temp", cond=list(Solar.R=100))
visreg2d(fit, "Wind", "Temp", cond=list(Solar.R=300))
visreg2d(fit, "Wind", "Temp", cond=list(Solar.R=100))
visreg2d(fit, "Wind", "Temp", cond=list(Solar.R=300))
visreg2d(fit, "Wind", "Temp", cond=list(Solar.R=1000))
visreg2d(fit, "Wind", "Temp", cond=list(Solar.R=1000000))
visreg2d(fit, "Wind", "Temp", cond=list(Solar.R=100))
visreg2d(fit, "Wind", "Temp", cond=list(Solar.R=10))
visreg2d(fit, "Wind", "Temp", cond=list(Solar.R=1))
data("birthwtt", package="MASS")
data("birthwt", package="MASS")
birthwt
require("survival")
survival
fit <- coxph(Surv(futime, fustat) ~ age + rx, data=ovarian)
ovarian
visreg(fit, "age", ylab="log(Hazard ratio)")
aq <- na.omit(airquality)
aq
fit1 <- randomForest(Ozone ~ Solar.R + Wind + Temp, data=aq)
library(randomForest)
library(e1071)
install.packages("e1071")
install.packages("randomForest")
fit1 <- randomForest(Ozone ~ Solar.R + Wind + Temp, data=aq)
library(randomForst)
library(randomForest)
library(e1071)
fit1 <- randomForest(Ozone ~ Solar.R + Wind + Temp, data=aq)
fit1
visreg(fit1)
fit2 <- svm (Ozone ~ Solar.R + Wind + Temp, data=aq)
fit2
visreg(fit2)
residuals.gmb(Ozone ~ Solar.R + Wind + Temp, data=aq)
library(gmb)
install.packages("gmb")
load("~/plot.csv")
X1 <- InstatDataObject$get_columns_from_data(data_name="plot", col_name="X1")
Recode1 <- revalue(replace=c(2="boy", s="girl"), x=X1)
revalue?
?
?revalue
?replace
x <- c(1,2,3; 2,2,5)
x <- c(1,2,3, 2,2,5)
y <- c(a, b, a, a, b, b)
X1 <- InstatDataObject$get_columns_from_data(data_name="plot", col_name="X1")
Recode1 <- revalue(replace=c(2="boy", s="girl"), x=X1)
Recode1 <- revalue((2="boy", s="girl"), x=X1)
Recode1 <- revalue(replace=c(2="boy", s="girl"), x=X1)
n <- c(1,2,3,4,5)
f <- c("a", "a", "b", "a", "b")
new <- data.frame(n,f)
new
X1 <- data_name = "new", col_name = "n"
X1 <- (data_name = "new", col_name = "n")
recode <- revalue(a = "A", b = "B")
recode <- revalue((a = "A", b = "B"), x=f
mydata <- rename(new, c(a="A"))
mydata <- rename(new, c(a="A"))
?rename
library(reshape)
mydata <- rename(new, c(a="A"))
mydata
Recode1 <- revalue(replace=c(2="boy", s="girl"), x=X1)
Recode1 <- rename(2="boy", s="girl")
Recode1 <- rename((2="boy", s="girl"), x = X1)
Recode1 <- rename((2="boy" s="girl"), x = X1)
Recode1 <- rename((2="boy"), x = X1)
mydata7
mydata
Recode1 <- rename(a="boy", b="girl")
Recode1 <- rename(a="boy")
Recode1 <- rename(mydata,a="boy")
Recode1 <- rename(mydata, c(a="boy")
)
Recode1 <- rename(mydata, c(b="boy", a="girl")
)
New
new
Recode1 <- rename(new, c(b="boy", a="girl")
)
Recode1
Recode1 <- revalue(c(2="boy", s="girl"), x=X1)
Recode1 <- revalue(x, c(2="boy", s="girl"))
?revalue
Recode1 <- revalue(replace=(2="boy", s="girl"), x=X1)
Recode1 <- revalue(replace=c(2="boy", s="girl"), x=X1)
Recode1 <- revalue(c(2="boy", s="girl"), x=X1)
Recode1
Recode1 <- revalue(c(a="boy", b="girl"), x=X1)
library(plyr)
Recode1 <- revalue(c(a="boy", b="girl"), x=X1)
X1 <- (data_name="Rename", col_name="a")
X1 <- (data_name="Recode1", col_name="a")
X1 <- (Recode1, col_name="a")
X1 <- (Recode1 col_name="a")
Recode1
Test <- Recode1
Test
Test
summary(test)
summary(Test)
note <- as.factor(Test$f)
Test <- data.frame(n, note)
Test
summary(Test)
?pcauchy
?PCA
??PCA#
setwd('C:/Users/visitor/Source/Repos/InstatLily/instat/bin/Debug/static/InstatObject/R')
source("Rsetup.R")
InstatDataObject <- instat_object$new()
# dlgImportDataset code generated by the dialog Import Dataset
plot <- rio::import(check.names=TRUE, stringsAsFactors=TRUE, file="C:/Users/visitor/Documents/plot.csv")
InstatDataObject$import_data(data_tables=list(plot=plot))
setwd("C:/Users/visitor/Source/Repos/InstatLily/instat/static/InstatObject/R")
setwd("C:/Users/visitor/Source/Repos/InstatLily/instat/static/InstatObject/R")
